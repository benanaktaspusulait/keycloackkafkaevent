version: '3.8'
services:
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.11
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    ports:
      - "9092:9092"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak_events
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.5
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_events
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
      KC_EVENTS_LISTENER_KAFKA_BOOTSTRAP_SERVERS: redpanda:29092
      KC_EVENTS_LISTENER_KAFKA_TOPIC: keycloak_events
      KC_EVENTS_LISTENER_KAFKA_CLIENT_ID: keycloak-event-listener
      KC_EVENTS_LISTENER_DB_URL: jdbc:postgresql://postgres:5432/keycloak_events
      KC_EVENTS_LISTENER_DB_USER: postgres
      KC_EVENTS_LISTENER_DB_PASSWORD: postgres
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    volumes:
      - ./keycloak-kafka-event-listener/target/keycloak-kafka-event-listener-1.0.0-SNAPSHOT-jar-with-dependencies.jar:/opt/keycloak/providers/keycloak-kafka-event-listener.jar
      - ./keycloak.conf:/opt/keycloak/conf/keycloak.conf
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  event-service:
    build:
      context: ./keycloak-event-service
      dockerfile: Dockerfile
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/keycloak_events
      - QUARKUS_DATASOURCE_USERNAME=postgres
      - QUARKUS_DATASOURCE_PASSWORD=postgres
      - QUARKUS_KAFKA_BOOTSTRAP_SERVERS=redpanda:9092
      - JAVA_TOOL_OPTIONS=-Dnet.bytebuddy.experimental=true
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redpanda:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: 